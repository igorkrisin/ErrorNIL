import Foundation
//1. Задание: Проверка булевых условий
//Описание: Разработайте систему, которая проверяет и выводит результаты на основе двух булевых значений.
//Требования:
//Проверка обоих условий:
//Имея два булевых значения, программа должна выводить "Оба условия выполняются", если оба условия истинны.
//В противном случае, программа должна выводить "Не все условия выполняются".
//Проверка хотя бы одного условия:
//Имея два булевых значения, программа должна выводить "Хотя бы одно из условий выполняется", если хотя бы одно из них истинно.
//В противном случае, программа должна выводить "Оба условия ложны".
//Ожидаемый результат: При запуске программы выводятся результаты на основе предоставленных булевых значений.

let condition1: Bool = false
let condition2: Bool = false

if condition1 && condition2 {
    print("Оба условия выполняются")
} else if (condition1 || condition2) {
    print("Не все условия выполняются")
} else {
    print("Оба условия ложны")
}

//2. Задание: Проверка четности числа
//Описание: Разработайте систему, которая определяет, является ли число четным или нечетным.
//Требования:
//Проверка на четность:
//Имея число, программа должна проверять его на четность.
//Если число четное, выводится "Число четное", в противном случае "Число нечетное".
//Ожидаемый результат: При запуске программы выводится результат на основе четности предоставленного числа.


var number: Int = 5

if number % 2 == 0 {
    print("Число четное")
} else {
    print("Число нечетное")
}

//3. Задание: Доступ на мероприятие
//Описание: Создайте систему, которая определяет, может ли человек пройти на важное мероприятие на основе его возраста и наличия билета.
//Требования:
//Проверка возраста и билета:
//Используя булевые значения для возраста (совершеннолетний ли человек) и наличия билета, программа определяет, может ли человек пройти на мероприятие.
//Если условия выполняются, программа выводит "Добро пожаловать!", в противном случае "Доступ запрещен".
//Ожидаемый результат: При запуске программы выводится решение о допуске человека на мероприятие на основе предоставленных условий.
//

let acceptAge: Bool = false
let hasTicket: Bool = true

if acceptAge && hasTicket {
    print("Добро пожаловать!")
} else {
    print("Доступ запрещен")
}


//4. Задание: Работа со строками
//Описание: Разработайте программу, которая объединяет и выводит строки.
//Требования:
//Объединение строк:
//Имея три строки (имя, фамилия, отчество), программа объединяет их, используя пробелы между ними, и выводит результат.
//Ожидаемый результат: При запуске программы выводится полное имя.

let name: String = "Igor"
let secondName: String = "Vasilevich"
let surname: String = "Krysin"

print("\(name) \(secondName) \(surname) ")

//5. Задание: Операции с числами
//Описание: Разработайте программу, которая проводит базовые арифметические операции с числами.
//Требования:
//Арифметические операции:
//Имея два числа, программа вычисляет их сумму, разность, произведение и частное, затем выводит результат каждой операции.
//Ожидаемый результат: При запуске программы выводятся результаты арифметических операций.

let number1: Float  = 10
let number2: Float = 20

print("""
      сумма: \(number1 + number2)\n
      разность: \(number1 - number2)\n
      произведение: \(number1 * number2)\n
      деление: \(number1 / number2)\n
      """)


//6. Задание: Точность чисел с плавающей запятой
//
//Описание: Разработайте систему, которая демонстрирует разницу в точности между типами данных Double и Float.
//Требования:
//Задайте две переменные: одну типа Double и одну типа Float.
//Выведите их значения на экран с максимальной точностью.
//Демонстрация разницы в точности:
//Продемонстрируйте разницу в точности этих двух типов, добавив или вычитая из них очень маленькое значение. Затем выводите результат на экран.
//Ожидаемый результат: При запуске программы пользователь увидит разницу в точности между Double и Float.


let doubleNumber: Double = 500
let floatNumber: Float = 500


print("Float: ", (floatNumber - 0.000001), "Double:", (doubleNumber - 0.000001))


print("Float: ", (floatNumber + 0.000001), "Double:", (doubleNumber + 0.000001))


//7. Задание: Условные операторы и возраст
//Описание: Создайте систему, которая определяет совершеннолетие человека на основе его возраста.
//Требования:
//Проверка возраста:
//Задайте переменную с возрастом.
//Напишите условие, которое проверяет, является ли человек совершеннолетним, и выводит соответствующее сообщение.
//Ожидаемый результат: При запуске программы на экран выводится информация о совершеннолетии на основе заданного возраста.

let age = 17

if age >= 18 {
    print("совершеннолетий")
} else {
    print("не совершеннолетий")
}


//8. Задание: Работа с циклами
//Описание: Создайте программу, которая использует циклы для вывода чисел.
//Требования:
//Вывод чисел:
//Напишите цикл, который выводит первые 10 натуральных чисел.
//Вывод квадратов чисел:
//Реализуйте другой цикл, который выводит квадрат каждого из первых 10 натуральных чисел.
//Ожидаемый результат: При запуске программы на экран выводятся числа и их квадраты.

for i in 0...10 {
    print(i)
}

for i in 0...10 {
    print(i*i)
}

//8. Задание: Логическое "И" (&&)
//Описание: Разработайте программу, которая анализирует два булевых значения (true или false) и решает, соответствуют ли оба условия истине.
//Требования:
//Проверка условий:
//Проанализируйте два предоставленных булевых значения.
//Если оба значения истинны (true), выведите сообщение "Оба условия выполняются".
//В противном случае, выведите "Не все условия выполняются".
//Ожидаемый результат: При анализе булевых значений программа корректно определяет, соответствуют ли оба условия истине или нет.

let condit1: Bool = false
let condit2: Bool = true

if condit1 && condit2 {
    print("Оба условия выполняются")
} else {
    print("Не все условия выполняются")
}

//
//9. Задание: Логическое "ИЛИ" (||)
//Описание: Создайте программу, которая определяет, является ли хотя бы одно из двух булевых условий истинным.
//Требования:
//Проверка условий:
//Проанализируйте два предоставленных булевых значения.
//Если хотя бы одно из условий истинно (true), выведите "Хотя бы одно из условий выполняется".
//В противном случае, выведите "Оба условия ложны".


if condit1 || condit2 {
    print("Хотя бы одно из условий выполняется")
} else {
    print( "Оба условия ложны")
}

//
//0. Задание: Логическое отрицание (!)
//Описание: Разработайте программу, которая определяет четность введенного числа.
//Требования:
//Анализ четности:
//Определите, является ли предоставленное число четным.
//Если число нечетное, используйте оператор ! для инвертирования результата и выводите "Число четное".
//Если число четное, выведите "Число нечетное".
//Ожидаемый результат: Программа корректно определяет четность числа и выводит соответствующий результат.

var even = 4

if !((even % 2) != 0) {
    print("Число четное")
} else {
    print("Число не четное")
}


//11. Задание: Комбинация операторов
//Описание: Создайте систему, которая определяет, может ли пользователь участвовать в важном мероприятии на основе двух булевых условий.
//Требования:
//Проверка условий участия:
//Определите, соответствуют ли два предоставленных условия: возраст пользователя старше 18 лет (isAdult) и наличие билета (hasTicket).
//Используйте операторы && и || для определения возможности участия в мероприятии.
//Если пользователь может участвовать, выведите "Добро пожаловать!".
//В противном случае, выведите "Доступ запрещен".
//Ожидаемый результат: Программа корректно определяет возможность участия пользователя в мероприятии на основе предоставленных условий.
let myAge: Int = 18
let hasMyTicket: Bool = true
if myAge >= 18 && hasMyTicket {
    print("Добро пожаловать!")
} else {
    print("Доступ запрещен")
}
//12. Задание: Четность числа
// Описание: Разработайте функцию, которая определяет, является ли предоставленное число четным.
// Требования:
// Функция определения:
// Создайте функцию, которая принимает число в качестве параметра.
// Функция должна возвращать true, если число четное, и false, если нечетное.
// Ожидаемый результат: При передаче числа в функцию, она вернет результат четности числа.

func evenDigit(number: Int) -> Bool {
    if number % 2 == 0 {
        return true
    }
    return false
}

print(evenDigit(number: 0))


//13. Задание: Делимость на 3
//Описание: Разработайте функцию, которая проверяет, делится ли предоставленное число на 3 без остатка.
//Требования:
//Функция проверки:
//Создайте функцию, принимающую число в качестве параметра.
//Функция должна возвращать true, если число делится на 3 без остатка, и false в противном случае.
//Ожидаемый результат: При передаче числа в функцию, она вернет результат


func devideOfThree(number: Int) -> Bool {
    if number % 3 == 0 {
        return true
    }
    return false
}

print(devideOfThree(number: 7))

//14. Задание: Массив из 100 чисел
//Описание: Создайте возрастающий массив, содержащий 100 чисел.
//Требования:
//Создание массива:
//Массив должен начинаться с 1 и заканчиваться 100.
//Удалите из массива все четные числа и числа, которые не делятся на 3.
//Ожидаемый результат: В результате вы получите массив, в котором нет четных чисел и чисел, не делящихся на 3.


var array:[Int] = []
for i in 1...100 {
    array += [i]
}

var newArray: [Int] = []

for value in array {
    if value >= 3 && value % 3 != 0 && value % 2 != 0  {
        newArray.append(value)
    }
}

array = newArray

print("array: ", array)

//15. Задание: Числа Фибоначчи
//Описание: Разработайте функцию, которая добавляет в массив новое число Фибоначчи.
//Требования:
//Функция Фибоначчи:
//Создайте функцию, которая добавляет в массив 50 чисел Фибоначчи.
//Числа Фибоначчи определяются соотношениями Fn=Fn-1 + Fn-2.
//Ожидаемый результат: Массив, содержащий 50 чисел Фибоначчи.


func fibCycle(_ number: Int) -> [Int] {
    var fib1: Int = 1
    var fib2: Int = 1
    var fibSumm: Int =  0
    
    var summArray: [Int] = []
    
    for i in 0...number {
        fibSumm = fib1 + fib2
        fib1 = fib2
        fib2 = fibSumm
        summArray.append(fib2)
    }
    return summArray
}

print(fibCycle(50))

//экспирементальная часть

func fibRecur(_ number: Int) -> Int {
    
    if number == 0 || number == 1 {
        return 1
    }
    return fibRecur(number - 1) + fibRecur(number - 2)
}


func addFibInArray() -> [Int] {
    var array: [Int] = []
    
    for i in 0...50 {
        array.append(fibRecur(i))
    }
    return array
}

//print("fib: ", addFibInArray()) очень долго работает - несоветую запускать)))

//6. Задание: Факториал числа
//Описание: Напишите функцию, которая рассчитывает факториал заданного числа N.
//Требования:
//Функция факториала:
//Функция принимает число N в качестве параметра.
//Функция должна возвращать значение факториала для N.

func factorial(_ number: Int) -> Int {
    if number <= 1 {
        return 1
    }
    
    return (number * factorial(number - 1))
}

print(factorial(5))


//17. Задание: Простой калькулятор
//Описание: Разработайте программу, которая выполняет арифметические операции между двумя числами.
//Требования:
//Функция калькулятора:
//Функция принимает два числа и операцию (сложение, вычитание, умножение, деление) в качестве параметров.
//Функция должна возвращать результат выбранной операции.
//Ожидаемый результат: При передаче двух чисел и операции в функцию, она вернет результат этой операции.

func calculator(_ number1: Int, _ number2: Int, _ sign: String) -> String {
    switch sign {
    case "+" :
        return String(number1 + number2)
    case "-" :
        return String(number1 - number2)
    case "/" :
        if number2 == 0 {
            print("devision on zero - error")
            break
        }
        return String(number1 / number2)
    case "*" :
        return String(number1 * number2)
    default:
        return "error for sign "
    }
    return " error for value for valvulate"
}

print(calculator(40, 5, "*"))

//18. Задание: Длина строки
//Описание: Разработайте функцию, которая определяет длину заданной строки.
//Требования:
//Функция определения длины:
//Функция принимает строку в качестве параметра.
//Функция возвращает длину этой строки.
//Ожидаемый результат: При передаче строки в функцию, она вернет длину этой строки.


func sizeString(str: String) -> Int {
    var amount: Int = 0
    for i in str {
        amount += 1
    }
    return amount
}

print(sizeString(str: "ghghghghghghg"))


//19. Задание: Максимум из трех чисел
//Описание: Создайте функцию, которая определяет максимальное из трех предоставленных чисел.
//Требования:
//Функция нахождения максимума:
//Функция принимает три числа в качестве параметров.
//Функция возвращает наибольшее из трех чисел.
//Ожидаемый результат: При передаче трех чисел в функцию, она вернет наибольшее из них.

func maxNumber(num1: Int, num2: Int, num3: Int) -> Int {
    if num1 > num2 && num1 > num3 {
        return num1
    } else if num2 > num1 && num2 > num3 {
        return num2
    }
    return num3
    
}

print(maxNumber(num1: 12, num2: 22, num3: 9))

//20. Задание: Реверс строки
//Описание: Напишите функцию, которая переворачивает введенную пользователем строку.
//Требования:
//Функция реверса:
//Функция принимает строку в качестве параметра.
//Функция возвращает эту строку в обратном порядке.
//Ожидаемый результат: При передаче строки в функцию, она вернет эту строку в обратном порядке.


func reverseString(str: String) -> String {
    var newString: String = ""
    for char in str {
        newString = String(char) + newString
    }
    return newString
}

print(reverseString(str: "hello"))


//21. Задание: Подсчет слов в строке
//Описание: Создайте функцию, которая определяет количество слов в заданной строке.
//Требования:
//Функция подсчета слов:
//Функция принимает строку в качестве параметра.
//Функция возвращает количество слов в этой строке.
//Ожидаемый результат: При передаче строки в функцию, она вернет количество слов в этой строке.


func countWordsInString(str: String) -> Int {
    var countWords: Int = 0
    var isChar: Bool = false
    
    for char in str {
        if char.isLetter {
            if !isChar {
                countWords += 1
                isChar = true
            }
        } else {
            isChar = false
        }
    }
    return countWords
}

print(countWordsInString(str: "  hrllo     ооорор     "))
